// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoliceOfficerManagement.Data;

#nullable disable

namespace PoliceOfficerManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250105053058_table Rel Update.")]
    partial class tableRelUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("emailOtpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("emailVerifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("isActive")
                        .HasColumnType("int");

                    b.Property<int?>("isChangePassword")
                        .HasColumnType("int");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<int?>("isVarified")
                        .HasColumnType("int");

                    b.Property<string>("otpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("otpExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("userTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Auth.ActivityHistoryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("actionId")
                        .HasColumnType("int");

                    b.Property<string>("actionName")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("ipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<int?>("logTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("statusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("logTypeId");

                    b.ToTable("ActivityHistoryLogs");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Auth.ActivityLogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<int?>("shortOrder")
                        .HasColumnType("int");

                    b.Property<string>("tableName")
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("typeName")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogTypes");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Auth.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<int?>("shortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.AdderssInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("addressType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("districtId")
                        .HasColumnType("int");

                    b.Property<int?>("divisionId")
                        .HasColumnType("int");

                    b.Property<int?>("employeeId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("roadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("thanaId")
                        .HasColumnType("int");

                    b.Property<int?>("unionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("villegeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.HasIndex("divisionId");

                    b.HasIndex("employeeId");

                    b.HasIndex("thanaId");

                    b.HasIndex("unionId");

                    b.HasIndex("villegeId");

                    b.ToTable("AdderssInfos");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("countryCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("countryName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("countryNameBn")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shortName")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("districtCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("districtName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("districtNameBn")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<int>("divisionId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("shortName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("divisionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divisionCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("divisionName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("divisionNameBn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("shortName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.DivisionDistrict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("divisionDistrictName")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<string>("divisionDistrictNameBn")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<int?>("pimsDistrictId")
                        .HasColumnType("int");

                    b.Property<string>("pimsDistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rangeMetroId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("rangeMetroId");

                    b.ToTable("DivisionDistricts");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.EducationalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("achievement")
                        .HasMaxLength(420)
                        .HasColumnType("nvarchar(420)");

                    b.Property<string>("batchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("courseDuration")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("degreeName")
                        .HasMaxLength(420)
                        .HasColumnType("nvarchar(420)");

                    b.Property<int?>("employeeId")
                        .HasColumnType("int");

                    b.Property<string>("grade")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("instituteId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("passingYear")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("instituteId");

                    b.ToTable("EducationalInfos");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.EmployeInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("homeDistrict")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("homeUpazila")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("joiningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("joiningRankId")
                        .HasColumnType("int");

                    b.Property<string>("nameBn")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("nameEn")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("nidNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("officePhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("personalPhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("reMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("retirementDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("employeeInfos");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.InstitutionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("establishYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("instituteType")
                        .HasMaxLength(420)
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("nameBn")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("nameEn")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("placeInfo")
                        .HasMaxLength(420)
                        .HasColumnType("nvarchar(420)");

                    b.Property<int?>("type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InstitutionInfos");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.PoliceThana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("divisionDistrictId")
                        .HasColumnType("int");

                    b.Property<int?>("fariType")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isChild")
                        .HasColumnType("int");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("isReportable")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<int?>("pimsThanaId")
                        .HasColumnType("int");

                    b.Property<string>("pimsThanaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("policeThanaId")
                        .HasColumnType("int");

                    b.Property<string>("policeThanaName")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<string>("policeThanaNameBn")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<int?>("rangeMetroId")
                        .HasColumnType("int");

                    b.Property<int?>("upazillaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("zoneCircleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("divisionDistrictId");

                    b.HasIndex("policeThanaId");

                    b.HasIndex("rangeMetroId");

                    b.HasIndex("upazillaId");

                    b.HasIndex("zoneCircleId");

                    b.ToTable("PoliceThanas");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.PostingPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("districtId")
                        .HasColumnType("int");

                    b.Property<int?>("employeeId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("postingFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("postingTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("promotionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("rangeId")
                        .HasColumnType("int");

                    b.Property<int?>("rankId")
                        .HasColumnType("int");

                    b.Property<string>("reMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("thanaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("zoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.HasIndex("employeeId");

                    b.HasIndex("rangeId");

                    b.HasIndex("thanaId");

                    b.HasIndex("zoneId");

                    b.ToTable("PostingPlaces");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.RangeMetro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<int?>("pimsRangeId")
                        .HasColumnType("int");

                    b.Property<string>("pimsRangeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rangeMetroName")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<string>("rangeMetroNameBn")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RangeMetros");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("forceCatId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("rankCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rankName")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("rankNameBN")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("shortName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("shortOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ranks");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Thana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("districtId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<int?>("rangeMetroId")
                        .HasColumnType("int");

                    b.Property<string>("shortName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("thanaCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("thanaName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("thanaNameBn")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("districtId");

                    b.HasIndex("rangeMetroId");

                    b.ToTable("Thanas");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.TrainingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("achievement")
                        .HasMaxLength(420)
                        .HasColumnType("nvarchar(420)");

                    b.Property<string>("batchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("courseDuration")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("degreeName")
                        .HasMaxLength(420)
                        .HasColumnType("nvarchar(420)");

                    b.Property<int?>("employeeId")
                        .HasColumnType("int");

                    b.Property<string>("grade")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("instituteId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("passingYear")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("employeeId");

                    b.HasIndex("instituteId");

                    b.ToTable("TrainingInfos");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.UnionWard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("districtsId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("shortName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("thanaId")
                        .HasColumnType("int");

                    b.Property<string>("unionCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("unionName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("unionNameBn")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("districtsId");

                    b.HasIndex("thanaId");

                    b.ToTable("UnionWards");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Village", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("districtsId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("shortName")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("thanaId")
                        .HasColumnType("int");

                    b.Property<int>("unionWardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("villageCode")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("villageName")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("villageNameBn")
                        .HasColumnType("NVARCHAR(120)");

                    b.HasKey("Id");

                    b.HasIndex("districtsId");

                    b.HasIndex("thanaId");

                    b.HasIndex("unionWardId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.ZoneCircle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("divisionDistrictId")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<int?>("isDelete")
                        .HasColumnType("int");

                    b.Property<string>("latitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("longitude")
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<int?>("pimsZoneId")
                        .HasColumnType("int");

                    b.Property<string>("pimsZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("updatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zoneName")
                        .HasColumnType("NVARCHAR(350)");

                    b.Property<string>("zoneNameBn")
                        .HasColumnType("NVARCHAR(350)");

                    b.HasKey("Id");

                    b.HasIndex("divisionDistrictId");

                    b.ToTable("ZoneCircles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoliceOfficerManagement.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Auth.ActivityHistoryLog", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("PoliceOfficerManagement.Data.Auth.ActivityLogType", "logType")
                        .WithMany()
                        .HasForeignKey("logTypeId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("logType");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.AdderssInfo", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.EmployeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.UnionWard", "union")
                        .WithMany()
                        .HasForeignKey("unionId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.Village", "villege")
                        .WithMany()
                        .HasForeignKey("villegeId");

                    b.Navigation("district");

                    b.Navigation("division");

                    b.Navigation("employee");

                    b.Navigation("thana");

                    b.Navigation("union");

                    b.Navigation("villege");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.District", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.Division", "division")
                        .WithMany()
                        .HasForeignKey("divisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("division");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Division", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId");

                    b.Navigation("country");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.DivisionDistrict", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.RangeMetro", "rangeMetro")
                        .WithMany()
                        .HasForeignKey("rangeMetroId");

                    b.Navigation("rangeMetro");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.EducationalInfo", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.EmployeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.InstitutionInfo", "institute")
                        .WithMany()
                        .HasForeignKey("instituteId");

                    b.Navigation("employee");

                    b.Navigation("institute");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.PoliceThana", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.DivisionDistrict", "divisionDistrict")
                        .WithMany()
                        .HasForeignKey("divisionDistrictId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.PoliceThana", "policeThana")
                        .WithMany()
                        .HasForeignKey("policeThanaId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.RangeMetro", "rangeMetro")
                        .WithMany()
                        .HasForeignKey("rangeMetroId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.Thana", "upazilla")
                        .WithMany()
                        .HasForeignKey("upazillaId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.ZoneCircle", "zoneCircle")
                        .WithMany()
                        .HasForeignKey("zoneCircleId");

                    b.Navigation("divisionDistrict");

                    b.Navigation("policeThana");

                    b.Navigation("rangeMetro");

                    b.Navigation("upazilla");

                    b.Navigation("zoneCircle");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.PostingPlace", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.DivisionDistrict", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.EmployeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.RangeMetro", "range")
                        .WithMany()
                        .HasForeignKey("rangeId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.PoliceThana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.ZoneCircle", "zone")
                        .WithMany()
                        .HasForeignKey("zoneId");

                    b.Navigation("district");

                    b.Navigation("employee");

                    b.Navigation("range");

                    b.Navigation("thana");

                    b.Navigation("zone");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Thana", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.District", "district")
                        .WithMany()
                        .HasForeignKey("districtId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.RangeMetro", "rangeMetro")
                        .WithMany()
                        .HasForeignKey("rangeMetroId");

                    b.Navigation("district");

                    b.Navigation("rangeMetro");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.TrainingInfo", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.EmployeInfo", "employee")
                        .WithMany()
                        .HasForeignKey("employeeId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.InstitutionInfo", "institute")
                        .WithMany()
                        .HasForeignKey("instituteId");

                    b.Navigation("employee");

                    b.Navigation("institute");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.UnionWard", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.District", "districts")
                        .WithMany()
                        .HasForeignKey("districtsId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("districts");

                    b.Navigation("thana");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.Village", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.District", "districts")
                        .WithMany()
                        .HasForeignKey("districtsId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.Thana", "thana")
                        .WithMany()
                        .HasForeignKey("thanaId");

                    b.HasOne("PoliceOfficerManagement.Data.Entity.UnionWard", "unionWard")
                        .WithMany()
                        .HasForeignKey("unionWardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("districts");

                    b.Navigation("thana");

                    b.Navigation("unionWard");
                });

            modelBuilder.Entity("PoliceOfficerManagement.Data.Entity.ZoneCircle", b =>
                {
                    b.HasOne("PoliceOfficerManagement.Data.Entity.DivisionDistrict", "divisionDistrict")
                        .WithMany()
                        .HasForeignKey("divisionDistrictId");

                    b.Navigation("divisionDistrict");
                });
#pragma warning restore 612, 618
        }
    }
}
